<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- =============================== -->
  <!-- Identification of *this* module -->
  <!-- =============================== -->

  <groupId>org.supervision</groupId>
  <artifactId>application</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>application</name>
  <description>A simple application.</description>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <!-- ==================================== -->
  <!-- Identification of the parent project -->
  <!-- ==================================== -->

  <parent>
    <groupId>org.project</groupId>
    <artifactId>app</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <!-- =================================================================== -->
  <!-- This module (a.k.a the application) depends on the 2 other modules. -->
  <!-- Therefore, we need to inform Maven about that.                      -->
  <!-- =================================================================== -->

  <dependencies>
    <dependency>
      <groupId>org.company</groupId>
      <artifactId>org.company.module</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.vendor</groupId>
      <artifactId>org.vendor.module</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>


  <build>
    <pluginManagement>
      <plugins>

        <!--
        Configure the Exec Maven Plugin so we can execute "mvn exec:java" directly. This configuration mainly
        defines the fully qualified name of the class that contains the method "main".

        Please note that this configuration may have been inserted into the parent POM (in that case, it would have been inherited).
        -->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.4.1</version>
            <executions>

              <!--
              Configuration pour la commande "mvn exec:exec@exec-execution".
              -->
              <execution>
                <id>exec-execution</id>
                <goals>
                    <goal>exec</goal>
                </goals>

                <configuration>
                  <executable>java</executable>
                  <arguments>
                    <!--
                    Set the class paths
                    ===================

                    <classpath/>: this will generate the classpath for us.

                    Please note that you could set the option more than once in order to add additional class paths.
                    -->
                    <argument>--class-path</argument>  
                    <classpath/>

                    <!--
                    Set paths to Java modules
                    =========================

                    <modulepath/>: automatically creates the modulepath using all project
                                   dependencies, also adding the project build directory.
                    -->
                    <argument>--module-path</argument>
                    <modulepath/>
                    <argument>org.supervision.Main</argument>
                  </arguments>
                </configuration>
              </execution>

              <!--
              Configuration pour la commande "mvn exec:java@java-execution"

              Please, be aware of the command line!

              mvn exec:java@java-execution
              -->
              <execution>
                  <id>java-execution</id>
                  <goals>
                    <goal>java</goal>
                  </goals>
                  <configuration>
                    <mainClass>org.supervision.Main</mainClass>
                    <!--
                    See:
                    (1) https://www.mojohaus.org/exec-maven-plugin/examples/example-exec-or-java-change-classpath-scope.html
                    (2) https://www.mojohaus.org/exec-maven-plugin/exec-mojo.html#classpathScope
                    -->
                    <classpathScope>compile</classpathScope>
                  </configuration>
              </execution>
            </executions>
        </plugin>



        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
